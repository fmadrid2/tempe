{% from 'modules/annotation/bcftools_annotate.jst' import bcftools_annotate with context %}
{% from 'modules/annotation/snpeff.jst' import snpeff with context %}
{% from 'modules/annotation/vep.jst' import vep with context %}
{% from 'utilities/variant_filtering.jst' import tumor_only_variant_filter with context %}

{% macro annotate_vcfs(sample_or_pair, temp_dir, results_dir, input_vcf, taskPrefix, aligner, variant_caller, analysis_type) %}

{# This should correctly strip example.vcf.gz and example.vcf down to example #}
{% set vcf_prefix %}{{ input_vcf | removesuffix(".gz") | removesuffix(".vcf") }}{% endset %}

{% set annotate_task_prefix = taskPrefix+'_'+analysis_type+'_annotate_vcfs_bcftools_' %}

{% set flags = namespace({ 'bcftools': none, 'snpeff': none, 'vep': none }) %}

{% if tasks %}
  {% for annotate_task in tasks %}
    {% if annotate_task_prefix in annotate_task and tasks[annotate_task] %}
      {% set flags.bcftools = true %}
    {% elif annotate_task_prefix in annotate_task and tasks[annotate_task] is sameas false %}
      {% if flags.bcftools is not sameas true %}
        {% set flags.bcftools = false %}
      {% endif %}
    {% endif %}
  {% endfor %}

  {% if flags.bcftools is none %}
    {% set flags.bcftools = true %}
  {% endif %}

  {% if tasks[taskPrefix+"_"+analysis_type+"_annotate_vcfs_snpEff_ann"]|default(false) %}
    {% set flags.snpeff = true %}
  {% endif %}

  {% if tasks[taskPrefix+"_"+analysis_type+"_annotate_vcfs_vep"]|default(false) %}
    {% set flags.vep = true %}
  {% endif %}
{% else %}
  {% set flags.bcftools = true %}
  {% set flags.snpeff = true %}
  {% set flags.vep = true %}
{% endif %}

{% if flags.bcftools is sameas true %}

  {% set bcftools_output %}{{ vcf_prefix }}.db.vcf.gz{% endset %}
  {{- bcftools_annotate(sample_or_pair, temp_dir, input_vcf, taskPrefix, variant_caller, analysis_type, bcftools_output, aligner) }}

  {% set snpeff_output %}{{ vcf_prefix }}.db.snpeff.can.vcf.gz{% endset %}
  {% if flags.snpeff %}
    {{- snpeff(sample_or_pair, results_dir, bcftools_output, variant_caller, vcf_prefix+'.db', aligner, analysis_type) }}
  {% endif %}

  {% set vep_output %}{{ vcf_prefix }}.db.vep.pick.vcf.gz{% endset %}
  {% if flags.vep %}
    {{- vep(sample_or_pair, results_dir, bcftools_output, variant_caller, vcf_prefix+'.db', aligner, analysis_type) }}
  {% endif %}

  {# tumor_only variant filtering only works if we annotated with bcftools #}
  {% if 'tumor_only' in analysis_type %}
    {% if flags.snpeff %}
      {{- tumor_only_variant_filter(sample_or_pair, snpeff_output, temp_dir, variant_caller, 'snpeff') }}
    {% endif %}
    {% if flags.vep %}
      {{- tumor_only_variant_filter(sample_or_pair, vep_output, temp_dir, variant_caller, 'vep') }}
    {% endif %}
    {% if not flags.snpeff or flags.vep %}
      {{- tumor_only_variant_filter(sample_or_pair, bcftools_output, temp_dir, variant_caller, 'bcftools') }}
    {% endif %}
  {% endif %}

{% else %}

  {% if flags.snpeff %}
    {{- snpeff(sample_or_pair, results_dir, input_vcf, variant_caller, vcf_prefix, aligner, analysis_type) }}
  {% endif %}

  {% if flags.vep %}
    {{- vep(sample_or_pair, results_dir, input_vcf, variant_caller, vcf_prefix, aligner, analysis_type) }}
  {% endif %}

{% endif %}

{% endmacro %}