
{% macro snpeff(sample_or_pair, results_dir, input_vcf, variant_caller, final_vcf_prefix, aligner, analysis_type) %}

- name: snpeff_{{ variant_caller }}_{{ sample_or_pair.name }}_{{ aligner }}
  tags: [{{ sample_or_pair.gltype }}, {{ analysis_type }}, annotate_vcfs, {{ variant_caller }}, {{ sample_or_pair.name }}]
  input: 
    - {{ input_vcf }}
    - {{ constants.tempe.snpeff_config }}
    - {{ constants.tempe.snpeff_data }}
    - {{ constants.tempe.snpeff_db }}
  output:
    - {{ final_vcf_prefix }}.snpeff.full.vcf
    - {{ final_vcf_prefix }}.snpeff.can.vcf
  walltime: "8:00:00"
  cpus: 4
  mem: 8G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.snpeff.container }}
  digest: {{ constants.tools.snpeff.digest }}
  cmd: |
    set -eu
    set -o pipefail

    {# No long options available for the following:
      -t      Use multiple threads (implies '-noStats')
      -c      Config file, apparently the long form breaks stuff
      -hgvs   Use HGVS annotations for amino acid sub-field
      -lof    Add loss of function (LOF) and Nonsense mediated decay (NMD) tags
    #}
    {# Generate full annotation set #}
    snpEff ann \
      -t \
      -c "{{ constants.tempe.snpeff_config }}" \
      -dataDir "{{ constants.tempe.snpeff_data }}" \
      -hgvs \
      -lof \
      "{{ constants.tempe.snpeff_db }}" \
      "{{ input_vcf }}" \
      > "{{ final_vcf_prefix }}.snpeff.full.vcf"

    {# No long options available for the following:
      -t      Use multiple threads (implies '-noStats')
      -c      Config file, apparently the long form breaks stuff
      -hgvs   Use HGVS annotations for amino acid sub-field
      -lof    Add loss of function (LOF) and Nonsense mediated decay (NMD) tags
      -canon  Only use canonical transcripts
    #}
    {# Generate canonical annotation set #}
    snpEff ann \
      -t \
      -c "{{ constants.tempe.snpeff_config }}" \
      -dataDir "{{ constants.tempe.snpeff_data }}" \
      -canon \
      -hgvs \
      -lof \
      "{{ constants.tempe.snpeff_db }}" \
      "{{ input_vcf }}" \
      > "{{ final_vcf_prefix }}.snpeff.can.vcf"


- name: snpeff_bcftools_compress_{{ variant_caller }}_{{ sample_or_pair.name }}_{{ aligner }}
  tags: [{{ sample_or_pair.gltype }}, {{ analysis_type }}, annotate_vcfs, {{ variant_caller }}, {{ sample_or_pair.name }}]
  input:
    - {{ final_vcf_prefix }}.snpeff.full.vcf
    - {{ final_vcf_prefix }}.snpeff.can.vcf
  output:
    - {{ final_vcf_prefix }}.snpeff.full.vcf.gz
    - {{ final_vcf_prefix }}.snpeff.full.vcf.gz.tbi
    - {{ final_vcf_prefix }}.snpeff.can.vcf.gz
    - {{ final_vcf_prefix }}.snpeff.can.vcf.gz.tbi
  walltime: "8:00:00"
  cpus: 4
  mem: 8G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  digest: {{ constants.tools.bcftools.digest }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools view \
      --output-type z \
      --output-file "{{ final_vcf_prefix }}.snpeff.full.vcf.gz" \
      "{{ final_vcf_prefix }}.snpeff.full.vcf"

    bcftools index \
      --threads 4 \
      --tbi \
      --force \
      "{{ final_vcf_prefix }}.snpeff.full.vcf.gz"

    bcftools view \
      --output-type z \
      --output-file "{{ final_vcf_prefix }}.snpeff.can.vcf.gz" \
      "{{ final_vcf_prefix }}.snpeff.can.vcf"

    bcftools index \
      --threads 4 \
      --tbi \
      --force \
      "{{ final_vcf_prefix }}.snpeff.can.vcf.gz"


{% endmacro %}
