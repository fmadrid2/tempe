{% macro bpure(sample, input_seg, seg_resolution, variant_caller, aligner='bwa') %}

{% set sample_bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{% set temp_dir %}temp/{{ sample.gltype }}/metrics/b_pure/{{ sample.name }}_{{ aligner }}{% endset %}
{% set results_dir %}{{ sample.gltype }}/metrics/b_pure/{{ sample.name }}_{{ aligner }}{% endset %}

{% set library_list %}{{ sample.read_groups.values()|map(attribute='rglb')|unique|join(',') }}{% endset %}

- name: bpure_{{ variant_caller }}_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype }}, b_cell_purity, {{ sample.name }}]
  input:
    - {{ sample_bam }}
    - {{ input_seg }}
    - {{ constants.tempe.reference_fasta }}
    - {{ constants.tempe.dj_window }}
  output:
    - {{ results_dir }}/{{ sample.name }}_{{ variant_caller }}_{{ seg_resolution }}_res_b_cell_purity.tsv
    - {{ results_dir }}/{{ sample.name }}_{{ variant_caller }}_{{ seg_resolution }}_res_b_cell_purity.json
  cpus: 2
  mem: 8G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  runner_args: ['--env', 'JS_PIPELINE_PATH=${JS_PIPELINE_PATH}']
  container: {{ constants.tools.bpure.container }}
  digest: {{ constants.tools.bpure.digest }}
  cmd: |
    set -eu
    set -o pipefail

    {# Should already exist #}
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    python ${JS_PIPELINE_PATH}/required_scripts/b_pure.py \
        --bam-file {{ sample_bam }} \
        --seg-file {{ input_seg }} \
        --seg-resolution {{ seg_resolution }} \
        {% if 'gatk' in variant_caller %}
        --header-prefix '@' \
        {% endif %}
        --reference-file {{ constants.tempe.reference_fasta }} \
        --region-file {{ constants.tempe.dj_window }} \
        --temp-dir {{ temp_dir }} \
        --output-dir {{ results_dir }} \
        --output-prefix {{ sample.name }}_{{ variant_caller }}_{{ seg_resolution }}_res \
        --sample-name {{ sample.name }} \
        --lib {{ library_list }} \
        --json-out True

{% endmacro %}