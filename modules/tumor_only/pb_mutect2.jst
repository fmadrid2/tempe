{% macro pb_mutect2_tumor_only(tumor, aligner='bwa') %}
{% set tumor_bam %}{{ tumor.gltype }}/alignment/{{ aligner }}/{{ tumor.name }}/{{ tumor.name }}.{{ aligner }}.bam{% endset %}
{% set temp_dir %}temp/{{ tumor.gltype }}/tumor_only_variant_calls/pb_mutect2/{{ tumor.name }}_{{ aligner }}{% endset %}
{% set results_dir %}{{ tumor.gltype }}/tumor_only_variant_calls/pb_mutect2/{{ tumor.name }}_{{ aligner }}{% endset %}
{% set all_vcf %}{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.mutect2.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.mutect2.pass.vcf.gz{% endset %}

- name: pb_mutect2_tumor_only_{{ tumor.name }}_{{ aligner }}
  tags: [{{ tumor.gltype }}, tumor_only, snp_indel_caller, gatk_mutect2, {{ tumor.name }}]
  input:
    - {{ tumor_bam }}
    - {{ constants.tempe.reference_fasta }}
  output:
    - {{ all_vcf }}
  walltime: "24:00:00"
  queue_args: ['-p', 'gpu', '--exclusive', '--profile=ltask', '--acctg-freq=task=1']
  queue_preset: "DEFAULT"
  container: {{ constants.tools.parabricks.container }}
  runner_args: ['-B', '/packages/parabricks-v3.7.0_V100/:/INSTALL/']
  cmd: |
    set -eu
    set -o pipefail

    /parabricks/run_pipeline.py mutectcaller \
      --ref {{ constants.tempe.reference_fasta }} \
      --tumor-name {{ tumor.rgsm }} \
      --in-tumor-bam {{ tumor_bam }} \
      --out-vcf {{ all_vcf }}


- name: pb_mutect2_tumor_only_filter_variants_{{ tumor.name }}_{{ aligner }}
  tags: [{{ tumor.gltype }}, tumor_only, snp_indel_caller, gatk_mutect2, {{ tumor.name }}]
  input:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
    {% if tumor.gltype == 'exome' %}
    - {{ tumor.capture_kit.extended_bed }}
    {% endif %}
  output:
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpu: 1
  mem: 4G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail
    
    bcftools filter \
      --output-type z \
      --include 'FILTER == "PASS"' \
      {% if tumor.gltype == 'exome' %}
      --targets-file "{{ tumor.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"
    
    bcftools index --tbi --force "{{ pass_vcf }}"

{% endmacro %}
