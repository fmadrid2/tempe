{% macro strelka2_tumor_only(pair, aligner='bwa') %}
{% set tumor_only_temp %}temp/tumor_only/control_data_files/{{ pair.normal.assayCode }}{% endset %}
{% set normal_bam %}{{ tumor_only_temp }}/{{ pair.normal.pathToBam | basename }}{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set indel_candidates %}{{ pair.gltype }}/tumor_only_structural_calls/manta/{{ pair.tumor.name }}_{{ aligner }}/{{ pair.tumor.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz{% endset %}
{% set results_dir %}{{ pair.gltype }}/tumor_only_variant_calls/strelka2/{{ pair.tumor.name }}{% endset %}
{% set temp_dir %}temp/{{ pair.gltype }}/tumor_only_variant_calls/strelka2/{{ pair.tumor.name }}_{{ aligner }}{% endset %}
{% set all_vcf %}{{ results_dir }}/{{ pair.tumor.name }}.{{ aligner }}.strelka2.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ results_dir }}/{{ pair.tumor.name }}.{{ aligner }}.strelka2.pass.vcf.gz{% endset %}

- name: tumor_only_strelka2_{{ pair.tumor.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, tumor_only, snp_indel_caller, strelka2, {{ pair.tumor.name }}]
  reset: prepare_tumor_only_{{ pair.normal.name }}
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
    - {{ indel_candidates }}
    - {{ indel_candidates }}.tbi
  output:
    - {{ temp_dir }}/results/variants/somatic.indels.vcf.gz
    - {{ temp_dir }}/results/variants/somatic.snvs.vcf.gz
    {% if cram|default(true) %}
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.cram
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.cram.crai
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.cram
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.cram.crai
    {% else %}
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam.bai
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam.bai
    {% endif %}
  cpus: 40
  mem: 40G
  walltime: "24:00:00"
  container: {{ constants.tools.strelka.container }}
  cmd: |
    set -eu
    set -o pipefail

    {# Purge any existing run files prior to starting #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    {#
    # In order to restrict calling to only the specified regions
    # strelka requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Strelka.
    #}
    TAB=$'\t'
    cat <<EOF > "{{ temp_dir }}/callRegions.bed"
    {% for contig in constants.tempe.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "{{ temp_dir }}/callRegions.bed"
    tabix -f -p bed "{{ temp_dir }}/callRegions.bed.gz"

    {#
    # Some settings are only configurable via an ini file. Here
    # we generate this ini file and save it to the run dir.
    #}
    cat <<EOF > "{{ temp_dir }}/config.ini"
    [StrelkaSomatic]
    isWriteRealignedBam = 1
    EOF

    {# Build the Strelka run file #}
    configureStrelkaSomaticWorkflow.py \
      {% if pair.gltype == 'exome' %}
      --exome \
      {% endif %}
      --config "{{ temp_dir }}/config.ini" \
      --callRegions "{{ temp_dir }}/callRegions.bed.gz" \
      --normalBam "{{ normal_bam }}" \
      --tumorBam "{{ tumor_bam }}" \
      --indelCandidates "{{ indel_candidates }}" \
      --ref "{{ constants.tempe.reference_fasta }}" \
      --runDir "{{ temp_dir }}"

    {# Execute on the local machine with 39 parallel jobs #}
    "{{ temp_dir }}/runWorkflow.py" -m local -j 39

    mkdir -p "{{ results_dir }}/evidence"

    {# Move and rename the evidence bams or make crams #}
    {% if cram|default(true) %}
    samtools view \
      -C \
      -@ 16 \
      --reference {{ constants.tempe.reference_fasta }} \
      -o {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.cram \
      {{ temp_dir }}/results/realigned/realigned.normal.bam

    samtools index {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.cram

    samtools view \
      -C \
      -@ 16 \
      --reference {{ constants.tempe.reference_fasta }} \
      -o {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.cram \
      {{ temp_dir }}/results/realigned/realigned.tumor.bam

    samtools index {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.cram
    {% else %}
    mv "{{ temp_dir }}/results/realigned/realigned.normal.bam" "{{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam"
    mv "{{ temp_dir }}/results/realigned/realigned.normal.bam.bai" "{{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam.bai"
    mv "{{ temp_dir }}/results/realigned/realigned.tumor.bam" "{{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam"
    mv "{{ temp_dir }}/results/realigned/realigned.tumor.bam.bai" "{{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam.bai"
    {% endif %}


- name: tumor_only_strelka2_filter_variants_{{ pair.tumor.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, tumor_only, snp_indel_caller, strelka2, {{ pair.tumor.name }}]
  reset: predecessors
  input:
    - {{ temp_dir }}/results/variants/somatic.indels.vcf.gz
    - {{ temp_dir }}/results/variants/somatic.snvs.vcf.gz
  output:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 2G
  container: {{ constants.tools.strelka.container }}
  cmd: |
    set -eu
    set -o pipefail

    {# Merge the snvs and indels into a final vcf #}
    bcftools concat \
      --allow-overlaps \
      --threads 1 \
      --output-type z \
      --output "{{ all_vcf }}" \
      "{{ temp_dir }}/results/variants/somatic.indels.vcf.gz" \
      "{{ temp_dir }}/results/variants/somatic.snvs.vcf.gz"

    bcftools index --tbi --force "{{ all_vcf }}"

    {# Then filter out the PASS variants to a separate file #}
    bcftools filter \
      --output-type z \
      --include 'FILTER == "PASS"' \
      {% if pair.gltype == 'exome' %}
      --targets-file "{{ pair.tumor.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"

    bcftools index --tbi --force "{{ pass_vcf }}"

{% endmacro %}
