{% macro pb_manta_tumor_only(tumor, aligner='bwa') %}
{% set tumor_bam %}{{ tumor.gltype }}/alignment/{{ aligner }}/{{ tumor.name }}/{{ tumor.name }}.{{ aligner }}.bam{% endset %}
{% set results_dir %}{{ tumor.gltype }}/tumor_only_structural_calls/pb_manta/{{ tumor.name }}_{{ aligner }}{% endset %}
{% set temp_dir %}temp/{{ tumor.gltype }}/tumor_only_structural_calls/pb_manta/{{ tumor.name }}_{{ aligner }}{% endset %}

- name: pb_manta_tumor_only_{{ tumor.name }}_{{ aligner }}
  tags: [{{ tumor.gltype }}, tumor_only, structural_caller, manta, {{ tumor.name }}]
  input:
    - {{ tumor_bam }}
  output:
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz.tbi
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSV.vcf.gz
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.diploidSV.vcf.gz
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.diploidSV.vcf.gz.tbi
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.somaticSV.vcf.gz
    - {{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.somaticSV.vcf.gz.tbi
  cpus: 40
  mem: 80G
  sbatch_args: ['--profile=ltask', '--acctg-freq=task=1']
  container: {{ constants.tools.parabricks.container }}
  backend_args: ['-B', '/packages/parabricks-v3.7.0_V100/:/INSTALL/']
  container:
  digest:
  cmd: |
    sbatch -n1 -d$SLURM_JOB_ID --wrap="sh5util -j $SLURM_JOB_ID"
    set -eu
    set -o pipefail

    {# Purge any existing run files prior to starting #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    {#
    # In order to restrict calling to only the specified regions
    # Manta requires a bed file (that has been bgzipped and indexed
    # with tabix). Here we generate that file on the fly, store in
    # the run dir, and pass the path to Manta.
    #}
    MANTA_BED="{{ temp_dir }}/callRegions.bed"
    TAB=$'\t'
    cat <<EOF > "${MANTA_BED}"
    {% for contig in constants.tempe.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "${MANTA_BED}"
    tabix -f -p bed "${MANTA_BED}.gz"

    /parabricks/run_pipeline.py manta \
      --ref {{ constants.tempe.reference_fasta }} \
      --num-threads 39 \
      --in-tumor-bam {{ tumor_bam }} \
      --bed {{ temp_dir }}/callRegions.bed.gz \
      --out-prefix {{ temp_dir }}/{{ tumor.name }}.{{ aligner }}

    mkdir -p "{{ results_dir }}" || true

    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/candidateSmallIndels.vcf.gz" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz"
    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/candidateSmallIndels.vcf.gz.tbi" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz.tbi"
    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/candidateSV.vcf.gz" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSV.vcf.gz"
    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/candidateSV.vcf.gz.tbi" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.candidateSV.vcf.gz.tbi"
    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/tumorSV.vcf.gz" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.tumorSV.vcf.gz"
    mv "{{ temp_dir }}/{{ tumor.name }}.{{ aligner }}.manta_work/results/variants/tumorSV.vcf.gz.tbi" "{{ results_dir }}/{{ tumor.name }}.{{ aligner }}.manta.tumorSV.vcf.gz.tbi"

{% endmacro %}
